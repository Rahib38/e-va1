generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

enum UserStatus {
  ACTIVE
  INACTIVE
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  email        String    @unique
  name         String
  password     String
  status UserStatus @default(ACTIVE)
  accessToken  String? // <-- Add this
  refreshToken String?
  role         UserRole  @default(USER)
  orders       Order[]   @relation("UserOrders")
  payments     Payment[] @relation("UserPayments")
  createdAt    DateTime  @default(now())

  @@map("users")
}

model Product {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  price     Int // Price in cents
  createdBy String?
  orderId   String?   @db.ObjectId
  order     Order?   @relation(fields: [orderId], references: [id])
  createdAt DateTime @default(now())

  @@map("products")
}

model Order {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  userId    String    @db.ObjectId
  products  Product[]
  total     Int
  status    OrderStatus @default(PENDING)
  createdAt DateTime  @default(now())

  user     User      @relation("UserOrders", fields: [userId], references: [id])
  payments Payment[] @relation("OrderPayments")

  @@map("oders")
}

enum OrderStatus {
  PENDING
  PAID
  CANCEL
}

model Payment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  orderId   String   @db.ObjectId
  amount    Int
  status    String
  stripeId  String
  createdAt DateTime @default(now())

  user  User? @relation("UserPayments", fields: [userId], references: [id])
  order Order @relation("OrderPayments", fields: [orderId], references: [id])

  @@map("payments")
}
